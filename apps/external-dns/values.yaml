adguard:
  global:
    fullnameOverride: external-dns-adguard
  controllers:
    main:
      enabled: true
      replicas: 1
      containers:
        main: 
          nameOverride: adguard
          image:
            repository: adguard/adguardhome
            tag: v0.107.64
            pullPolicy: IfNotPresent
          env:
            TZ: America/New_York
          args:
            - "--config"
            - "/opt/adguardhome/conf/AdGuardHome.yaml"
            - "--work-dir"
            - "/opt/adguardhome/work"
            - "--no-check-update"
  service:
    main:
      controller: main
      primary: true
      ports:
        http:
          port: 80
        setup:
          port: 3000
        dns:
          port: 53
    dns-tcp:
      controller: main
      annotations:
        metallb.universe.tf/allow-shared-ip: "adguard-dns"
      enabled: true
      type: LoadBalancer
      loadBalancerIP: [{ env "external_dns_lbip" }]
      ports:
        dns-tcp:
          enabled: true
          port: 53
          protocol: TCP
          targetPort: 53
      externalTrafficPolicy: Local
    dns-udp:
      controller: main
      annotations:
        metallb.universe.tf/allow-shared-ip: "adguard-dns"
      enabled: true
      type: LoadBalancer
      loadBalancerIP: [{ env "external_dns_lbip" }]
      ports:
        dns-udp:
          enabled: true
          port: 53
          protocol: UDP
          targetPort: 53
      externalTrafficPolicy: Local
  
  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      globalMounts:
        - path: /opt/adguardhome/conf
    data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      globalMounts:
        - path: /opt/adguardhome/work

private:
  podLabels:
    app.kubernetes.io/app: external-dns
  crd:
    create: true
  rbac:
    create: true
  provider: webhook
  policy: upsert-only
  labelFilter: access==private
  sources:
    - ingress
    - crd
  extraArgs:
    webhook-provider-url: http://localhost:8888
  sidecars:
  - name: adguard-webhook
    image: ghcr.io/muhlba91/external-dns-provider-adguard:v8.0.1
    ports:
      - containerPort: 8888
        name: http
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 30
      timeoutSeconds: 5
    readinessProbe:
      httpGet:
        path: /healthz
        port: 8080
      initialDelaySeconds: 30
      timeoutSeconds: 5
    env:
      - name: LOG_LEVEL
        value: debug
      - name: ADGUARD_URL
        value: http://external-dns-adguard.external-dns.svc
      - name: ADGUARD_USER
        value: external-dns
      - name: ADGUARD_PASSWORD
        value: password
      - name: SERVER_HOST
        value: "0.0.0.0"
      - name: DRY_RUN
        value: "false"

public:
  podLabels:
    app.kubernetes.io/app: external-dns
  crd:
    create: true
  rbac:
    create: true
  provider: cloudflare
  cloudflare:
    secretName: [{ env "acme_certs.cloud_secret"}]
    remoteSecret: [{ env "acme_certs.cloud_remoteSecret"}]
    email: [{ env "acme_certs.cloud_email"}]
    proxied: true
  policy: upsert-only
  labelFilter: access==public
  sources:
    - ingress
    - crd
