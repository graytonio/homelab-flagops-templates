gotify:
  controllers: 
    main:
      enabled: true
      replicas: 1
      containers:
        main:
          nameOverride: gotify
          image:
            repository: gotify/server
            tag: 2.5.0
            pullPolicy: IfNotPresent
          env:
            TZ: America/New_York
            GOTIFY_DATABASE_DIALECT: postgres
            GOTIFY_DATABASE_CONNECTION: host=gotify-postgres.gotify.svc.cluster.local port=5432 user=gotify password=gotify dbname=gotify # TODO Move to secret with secure password
  service:
    main:
      controller: main
      primary: true
      ports:
        http:
          port: 80
  
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        gethomepage.dev/enabled: "true"
        gethomepage.dev/description: Gotify
        gethomepage.dev/group: Infrastructure
        gethomepage.dev/icon: gotify.png
        gethomepage.dev/name: Gotify
        external-dns.alpha.kubernetes.io/target: [{ env "external_service_public_endpoint" }]
      labels:
        access: public
      tls:
      - hosts:
        - alerts.[{ env "env_domain" }]
        secretName: tls-gotify-ingress-dns
      hosts:
        - host: alerts.[{ env "env_domain" }]
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main

  persistence:
    data:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      globalMounts:
        - path: /app/data