credentials:
  secretName: grafana-cloud-credentials
  remoteSecret: grafana-cloud-credentials

k8s-monitoring:
  cluster:
    name: dc-homelab
  externalServices:
    prometheus:
      hostKey: prom-host
      basicAuth:
        usernameKey: prom-username
        passwordKey: prom-password
      secret:
        create: false
        name: grafana-cloud-credentials
    loki:
      hostKey: loki-host
      basicAuth:
        usernameKey: loki-username
        passwordKey: loki-password
      secret:
        create: false
        name: grafana-cloud-credentials
  metrics:
    enabled: true
    cost:
      enabled: false
    node-exporter:
      enabled: true
  logs:
    enabled: true
    pod_logs:
      enabled: true
    cluster_events:
      enabled: true
  traces:
    enabled: false
  receivers:
    grpc:
      enabled: false
    http:
      enabled: false
    zipkin:
      enabled: false
  opencost:
    enabled: false
  kube-state-metrics:
    enabled: true
  prometheus-node-exporter:
    enabled: true
  prometheus-operator-crds:
    enabled: true
  alloy: {}
  alloy-logs: {}
  extraConfig: |-
    discovery.relabel "cert_manager" {
      targets = discovery.kubernetes.services.targets
      rule {
        source_labels = ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
        regex = "cert-manager"
        action = "keep"
      }
      rule {
        source_labels = ["__meta_kubernetes_service_port_number"]
        regex = "9402"
        action = "keep"
      }
      rule {
          source_labels = ["__meta_kubernetes_pod_name"]
          target_label = "instance"
      }
    }

    prometheus.scrape "cert_manager" {
      job_name     = "integrations/cert-manager"
      targets      = discovery.relabel.cert_manager.output
      honor_labels = true
      forward_to   = [prometheus.relabel.metrics_service.receiver]
    }

    discovery.relabel "longhorn" {
      targets = discovery.kubernetes.pods.targets
      rule {
        source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
        regex = "longhorn"
        action = "keep"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_label_app"]
        regex = "longhorn-manager"
        action = "keep"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_container_port_number"]
        regex = "9500"
        action = "keep"
      }
      rule {
          source_labels = ["__meta_kubernetes_pod_name"]
          target_label = "instance"
      }
    }

    prometheus.scrape "longhorn" {
      job_name     = "integrations/longhorn"
      targets      = discovery.relabel.longhorn.output
      honor_labels = true
      forward_to   = [prometheus.relabel.metrics_service.receiver]
    }

    prometheus.scrape "truenas" {
      job_name = "integrations/truenas"
      scrape_interval = "30s"
      targets = [
        {"__address__" = "10.0.0.50:9108", "instance" = "vault"},
      ]
      honor_labels = true
      forward_to = [prometheus.relabel.metrics_service.receiver]
    }

