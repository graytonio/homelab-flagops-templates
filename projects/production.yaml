apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://kubernetes.default.svc
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: "-5"
  name: production
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  description: production deployments
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: production
  namespace: argocd
spec:
  goTemplate: true
  generators:
  - git:
      files:
      - path: production/apps/*/values.yaml
      repoURL: '[{ env "gitops_source" }]'
      requeueAfterSeconds: 20
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/name: '{{ .spec.app }}'
        app.kubernetes.io/instance: '{{ .spec.app }}-{{ .spec.identifier }}'
        app.kubernetes.io/version: '{{ .spec.app_version }}'
      annotations:
        argocd.argoproj.io/sync-wave: '{{ default "5" .spec.sync_wave }}'
      name: production-{{ .spec.app }}-{{ .spec.identifier }}
      namespace: '{{ if .spec.enabled }}argocd{{ else }}default{{ end }}'
    spec:
      destination:
        namespace: '{{ .spec.app }}-{{ .spec.identifier }}'
        server: '{{ default "https://kubernetes.default.svc" .spec.dest_cluster }}'
      ignoreDifferences:
        - group: argoproj.io
          jsonPointers:
            - /status
          kind: Application
      project: production
      sources:
        - path: '{{ .path.path }}'
          repoURL: '[{ env "gitops_source" }]'